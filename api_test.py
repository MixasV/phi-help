#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤
"""

from phi_api import PHIAPI
from data_utils import DataManager

def test_followers_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤")
    print("=" * 50)
    
    api = PHIAPI()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞
    test_target = "0xC7f9154a72524097B1323961F584f7047b875271"
    test_user = "0x1234567890123456789012345678901234567890"
    
    print(f"üéØ –¶–µ–ª–µ–≤–æ–π –∞–¥—Ä–µ—Å: {test_target}")
    print(f"üë§ –ê–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_user}")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
    print("\nüìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –æ–¥–∏–Ω –∞–¥—Ä–µ—Å")
    is_following = api.check_followers_for_address(test_target, test_user)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –ü–æ–¥–ø–∏—Å–∞–Ω' if is_following else '‚ùå –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω'}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–¥—Ä–µ—Å–æ–≤
    print("\nüìã –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–¥—Ä–µ—Å–æ–≤")
    test_addresses = [
        "0xC7f9154a72524097B1323961F584f7047b875271",
        "0x1234567890123456789012345678901234567890",
        "0xABCDEF1234567890123456789012345678901234"
    ]
    
    results = api.check_multiple_followers(test_addresses, test_user)
    
    for address, is_following in results.items():
        status = "‚úÖ –ü–æ–¥–ø–∏—Å–∞–Ω" if is_following else "‚ùå –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω"
        print(f"   {address[:10]}...{address[-4:]}: {status}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—á–∏–≤–æ–∫
    print("\nüìã –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—á–∏–≤–æ–∫")
    
    # Trendsetter
    trendsetter = api.get_trendsetter_achievement(test_user)
    if trendsetter:
        print(f"   Trendsetter: {trendsetter['progress_count']}/{trendsetter['required_count']}")
        print(f"   –í—ã–ø–æ–ª–Ω–µ–Ω–∞: {'‚úÖ' if trendsetter['completed'] else '‚ùå'}")
        print(f"   –û—Å—Ç–∞–ª–æ—Å—å: {trendsetter['remaining']}")
    else:
        print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –∞—á–∏–≤–∫–µ Trendsetter")
    
    # They Lovin' It
    token_holders = api.get_token_holders_achievement(test_user)
    if token_holders:
        print(f"   They Lovin' It: {token_holders['progress_count']}/{token_holders['required_count']}")
        print(f"   –í—ã–ø–æ–ª–Ω–µ–Ω–∞: {'‚úÖ' if token_holders['completed'] else '‚ùå'}")
        print(f"   –û—Å—Ç–∞–ª–æ—Å—å: {token_holders['remaining']}")
    else:
        print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –∞—á–∏–≤–∫–µ They Lovin' It")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
    print("\nüìã –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤")
    
    test_board_id = "5ced1c01-dca1-4021-8a9d-870955020444"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ö–æ–ª–¥–µ—Ä–æ–≤ —Ç–æ–∫–µ–Ω–∞
    holders_count = api.get_token_holders_count(test_board_id)
    if holders_count is not None:
        print(f"   –•–æ–ª–¥–µ—Ä–æ–≤ —Ç–æ–∫–µ–Ω–∞ {test_board_id[:8]}...: {holders_count}")
    else:
        print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ–ª–¥–µ—Ä–æ–≤ –¥–ª—è {test_board_id[:8]}...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—É–ø–∫–∏ —Ç–æ–∫–µ–Ω–∞
    purchase_check = api.check_token_purchase(test_board_id, test_user)
    print(f"   –ü–æ–∫—É–ø–∫–∞ —Ç–æ–∫–µ–Ω–∞ {test_user[:10]}...: {'‚úÖ –ö—É–ø–∏–ª' if purchase_check else '‚ùå –ù–µ –∫—É–ø–∏–ª'}")

def test_data_management():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏"""
    
    print("\nüóÇÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 50)
    
    dm = DataManager()
    
    # –¢–µ—Å—Ç 1: –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    print("\nüìã –¢–µ—Å—Ç 1: –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤")
    
    wallets = dm.read_wallets()
    boards = dm.read_boards()
    tokens = dm.read_tokens()
    
    print(f"   –ö–æ—à–µ–ª—å–∫–æ–≤: {len(wallets)}")
    print(f"   –ë–æ—Ä–¥–æ–≤: {len(boards)}")
    print(f"   –¢–æ–∫–µ–Ω–æ–≤: {len(tokens)}")
    
    # –¢–µ—Å—Ç 2: –°–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\nüìã –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    
    random_wallets = dm.get_random_wallets(3)
    print(f"   –°–ª—É—á–∞–π–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏: {len(random_wallets)}")
    for wallet in random_wallets:
        print(f"     {wallet[:10]}...{wallet[-4:]}")
    
    random_tokens = dm.get_random_tokens(3)
    print(f"   –°–ª—É—á–∞–π–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã: {len(random_tokens)}")
    for board_id in random_tokens:
        print(f"     {board_id[:8]}...")

def test_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    api = PHIAPI()
    dm = DataManager()
    
    # –¢–µ—Å—Ç: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤
    print("\nüìã –¢–µ—Å—Ç: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∞–¥—Ä–µ—Å–∞
    available_wallets = dm.get_random_wallets(3)
    
    if available_wallets:
        test_user = available_wallets[0]
        target_addresses = available_wallets[1:]
        
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user[:10]}...{test_user[-4:]}")
        print(f"   –¶–µ–ª–µ–≤—ã–µ –∞–¥—Ä–µ—Å–∞: {len(target_addresses)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
        results = api.check_multiple_followers(target_addresses, test_user)
        
        followed = [addr for addr, is_following in results.items() if is_following]
        not_followed = [addr for addr, is_following in results.items() if not is_following]
        
        print(f"   –ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞: {len(followed)}")
        print(f"   –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞: {len(not_followed)}")
        
        if not_followed:
            print("   –°—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:")
            for addr in not_followed:
                print(f"     https://phi.box/profile/{addr}")
    else:
        print("   ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # –¢–µ—Å—Ç: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤
    print("\nüìã –¢–µ—Å—Ç: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
    available_tokens = dm.get_random_tokens(3)
    
    if available_tokens:
        test_user = "0xC7f9154a72524097B1323961F584f7047b875271"
        
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user[:10]}...{test_user[-4:]}")
        print(f"   –¶–µ–ª–µ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã: {len(available_tokens)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∫—É–ø–∫–∏
        results = api.check_multiple_token_purchases(available_tokens, test_user)
        
        purchased = [board_id for board_id, is_purchased in results.items() if is_purchased]
        not_purchased = [board_id for board_id, is_purchased in results.items() if not is_purchased]
        
        print(f"   –ö—É–ø–∏–ª —Ç–æ–∫–µ–Ω–æ–≤: {len(purchased)}")
        print(f"   –ù–µ –∫—É–ø–∏–ª —Ç–æ–∫–µ–Ω–æ–≤: {len(not_purchased)}")
        
        if not_purchased:
            print("   –°—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:")
            for board_id in not_purchased:
                print(f"     https://phi.box/board/{board_id}")
    else:
        print("   ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

if __name__ == "__main__":
    try:
        test_followers_api()
        test_data_management()
        test_integration()
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
